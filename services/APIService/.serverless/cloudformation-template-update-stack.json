{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "CreateProfileLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/HC-APIService-ws-createProfile"
      }
    },
    "CreateProfileLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/HC-APIService/ws/1558901989904-2019-05-26T20:19:49.904Z/createProfile.zip"
        },
        "FunctionName": "HC-APIService-ws-createProfile",
        "Handler": "_optimize/HC-APIService-ws-createProfile/handlers/create-profile/create-profile.lambda",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "IAMLambdaRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 6,
        "Description": "Create user profile with id the same as Cognito UID",
        "Tags": [
          {
            "Key": "PROJECT",
            "Value": "HealthCheck"
          },
          {
            "Key": "REGION",
            "Value": "eu-west-2"
          }
        ],
        "Environment": {
          "Variables": {
            "FUNCTION": "create-profile",
            "PROFILES_TABLE": "HC-ws-ProfilesTable",
            "SLACK_NOTIFY_URL": "https://hooks.slack.com/services/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",
            "REGION": "eu-west-2",
            "STAGE": "ws"
          }
        }
      },
      "DependsOn": [
        "CreateProfileLogGroup",
        "IAMLambdaRole"
      ]
    },
    "CreateProfileLambdaVersionB0qLmmXsYG3Zosjhzc8a2C3qYFmoR1DAc9HQBpnvus": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateProfileLambdaFunction"
        },
        "CodeSha256": "EEHU7327gotBsZWhtMy+6xS+vNlGSlbT+LOSB7T1emc=",
        "Description": "Create user profile with id the same as Cognito UID"
      }
    },
    "ProfilesTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "HC-ws-ProfilesTable",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "IAMLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AWSLambdaFullAccess"
        ],
        "RoleName": "HC_ws_LambdaRole"
      }
    },
    "HttpAPI": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "HC-ws-HttpAPI"
      }
    },
    "UserPool": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 8,
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireSymbols": false,
            "RequireUppercase": true
          }
        },
        "Schema": [
          {
            "AttributeDataType": "String",
            "Mutable": true,
            "Name": "name",
            "Required": true
          }
        ],
        "UsernameAttributes": [
          "email"
        ],
        "AutoVerifiedAttributes": [
          "email"
        ],
        "UserPoolName": "HC-ws-UserPool",
        "LambdaConfig": {
          "PreSignUp": {
            "Fn::GetAtt": [
              "CreateProfileLambdaFunction",
              "Arn"
            ]
          }
        },
        "UserPoolTags": {
          "PROJECT": "HealthCheck"
        }
      }
    },
    "UserPoolLambdaInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "Principal": "cognito-idp.amazonaws.com",
        "FunctionName": "HC-APIService-ws-createProfile",
        "SourceArn": {
          "Fn::GetAtt": [
            "UserPool",
            "Arn"
          ]
        }
      }
    },
    "UserPoolClient": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "ClientName": "Mobile",
        "GenerateSecret": false,
        "UserPoolId": {
          "Ref": "UserPool"
        }
      }
    },
    "HTTPAuthorizer": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "AuthorizerResultTtlInSeconds": 300,
        "IdentitySource": "method.request.header.Authorization",
        "Name": "HealthCheckCognito",
        "RestApiId": {
          "Ref": "HttpAPI"
        },
        "Type": "COGNITO_USER_POOLS",
        "ProviderARNs": [
          {
            "Fn::GetAtt": [
              "UserPool",
              "Arn"
            ]
          }
        ]
      }
    },
    "NewProfileCreatedTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "ws-'New profile created'",
        "Subscription": [
          {
            "Endpoint": "https://hooks.slack.com/services/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",
            "Protocol": "https"
          }
        ],
        "TopicName": "NewProfileCreated-ws-Topic"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "CreateProfileLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateProfileLambdaVersionB0qLmmXsYG3Zosjhzc8a2C3qYFmoR1DAc9HQBpnvus"
      }
    },
    "HttpAPIID": {
      "Value": {
        "Ref": "HttpAPI"
      },
      "Export": {
        "Name": "HttpAPI-ID-ws"
      }
    },
    "HttpAPIRootResourceId": {
      "Value": {
        "Fn::GetAtt": [
          "HttpAPI",
          "RootResourceId"
        ]
      },
      "Export": {
        "Name": "HttpAPI-RootResourceId-ws"
      }
    },
    "HTTPAuthorizerID": {
      "Value": {
        "Ref": "HTTPAuthorizer"
      },
      "Export": {
        "Name": "HTTPAuthorizer-ID-ws"
      }
    },
    "IAMLambdaRoleARN": {
      "Value": {
        "Fn::GetAtt": [
          "IAMLambdaRole",
          "Arn"
        ]
      },
      "Export": {
        "Name": "IAMLambdaRole-ARN-ws"
      }
    },
    "ProfilesTable": {
      "Value": {
        "Ref": "ProfilesTable"
      },
      "Export": {
        "Name": "ProfilesTable-ws"
      }
    },
    "UserPoolID": {
      "Value": {
        "Ref": "UserPool"
      },
      "Export": {
        "Name": "UserPool-ID-ws"
      }
    }
  }
}
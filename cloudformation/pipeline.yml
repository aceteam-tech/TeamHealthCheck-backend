AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Health Check Functions Continuous Delivery AWS CloudFormation Template

Parameters:
#  PipelineName:
#    Description: A name for pipeline
#    Type: String
#  S3Bucket:
#    Description: The name of the S3 bucket that contains the source artifact, which must be in the same region as this stack
#    Type: String
#  SourceS3Key:
#    Default: wordpress-single-instance.zip
#    Description: The file name of the source artifact, such as myfolder/myartifact.zip
#    Type: String
  TemplateFileName:
    Default: cloudformation/dynamo-db.yml
    Description: The path to the deployment cloudformation template
    Type: String
  TestStackName:
    Default: HealthCheck-functions-dev
    Description: A name for the test WordPress stack
    Type: String
  TestStackConfig:
    Default: cloudformation/configuration-dev.yml
    Description: The configuration file name for the test WordPress stack
    Type: String
  OAuthToken:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: github-hc-functions-pipeline-oauth
    Description: The name of OAuth token for webhook integration defined in parameters store

#  ProdStackName:
#    Default: Prod-MyWordPressSite
#    Description: A name for the production WordPress stack
#    Type: String
#  ProdStackConfig:
#    Default: prod-stack-configuration.json
#    Description: The configuration file name for the production WordPress stack
#    Type: String
#  ChangeSetName:
#    Default: UpdatePreview-MyWordPressSite
#    Description: A name for the production WordPress stack change set
#    Type: String
#  Email:
#    Description: The email address where CodePipeline sends pipeline notifications
#    Type: String

#Metadata:
#  AWS::CloudFormation::Interface:
#    ParameterGroups:
#      - Label:
#          default: "CodePipeline Settings"
#        Parameters:
#          - PipelineName
#          - S3Bucket
#          - SourceS3Key
#          - Email
#      - Label:
#          default: "Test Stack Settings"
#        Parameters:
#          - TestStackName
#          - TemplateFileName
#          - TestStackConfig
#      - Label:
#          default: "Production Stack Settings"
#        Parameters:
#          - ChangeSetName
#          - ProdStackName
#          - ProdStackConfig

Resources:
#  CodePipelineSNSTopic:
#    Type: AWS::SNS::Topic
#    Properties:
#      Subscription:
#        - Endpoint: !Ref Email
#          Protocol: email

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:

      Name: HC-functions
#      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt [PipelineRole, Arn]
      ArtifactStore:
        Location: squad-health-check-builds
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Branch: master
                Owner: aceteam-tech
#               Move out
                OAuthToken: !Ref OAuthToken
                PollForSourceChanges: false
                Repo: TeamHealthCheck-backend
              OutputArtifacts:
                - Name: TemplateSource
              RunOrder: '1'
        - Name: TestStage
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CREATE_UPDATE
#               Replace with role created in the CloudFormation stack
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref TestStackName
                TemplateConfiguration: !Sub "TemplateSource::${TestStackConfig}"
                TemplatePath: !Sub "TemplateSource::${TemplateFileName}"
              RunOrder: '1'

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: HC-functions-CloudFormation
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: HC-functions-CodePipeline
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Health Check Functions Continuous Delivery AWS CloudFormation Template

Parameters:
  PipelineName:
    Default: HC-functions
    Description: A name for pipeline
    Type: String
  WebhookName:
    Default: HC-backend-webhook
    Description: Github webhook for new changes
    Type: String
  TestStackName:
    Default: HealthCheck-functions-dev
    Description: A name for the test WordPress stack
    Type: String
  OAuthToken:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: github-hc-functions-pipeline-oauth
    Description: The name of OAuth token for webhook integration defined in parameters store
  GithubSecret:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: github-hc-backend-pipeline-secret
    Description: The secret used to ensure, that webhook comes from github

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "CodePipeline Settings"
        Parameters:
          - PipelineName
          - OAuthToken
          - GithubSecret
          - WebhookName
      - Label:
          default: "Test Stack Settings"
        Parameters:
          - TestStackName

Resources:
  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: Build process to run the serverless deploy to staging environment
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
#        EnvironmentVariables:
#          - EnvironmentVariable
        Image: aws/codebuild/nodejs:10.14.1
        Type: LINUX_CONTAINER
      Name: HC_build
      ServiceRole: !GetAtt [PipelineRole, Arn]
      Source:
        Type: CODEPIPELINE
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt [PipelineRole, Arn]
      ArtifactStore:
        Location: squad-health-check-builds
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Branch: master
                Owner: aceteam-tech
                OAuthToken: !Ref OAuthToken
                PollForSourceChanges: false
                Repo: TeamHealthCheck-backend
              OutputArtifacts:
                - Name: TemplateSource
              RunOrder: '1'
        - Name: TestStage
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ProjectName: HC_build
              RunOrder: '1'

  Webhook:
    Type: "AWS::CodePipeline::Webhook"
    Properties:
      Name: !Ref WebhookName
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GithubSecret
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref PipelineName
      TargetAction: Source
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: 'true'

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: HC-functions-CloudFormation
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: HC-CodePipeline
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service:
              - codepipeline.amazonaws.com
              - codebuild.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

Outputs:
  WebhookUrl:
    Description: The url for the github webhook
    Value: !GetAtt Webhook.Url

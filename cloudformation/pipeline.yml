AWSTemplateFormatVersion: '2010-09-09'

Description: >
  Health Check Functions Continuous Delivery AWS CloudFormation Template

Parameters:
  PipelineName:
    Default: 'HC-functions'
    Description: 'A name for pipeline'
    Type: 'String'
  WebhookName:
    Default: 'HC-backend-webhook'
    Description: 'Github webhook for new changes'
    Type: 'String'
  TestStackName:
    Default: 'HealthCheck-functions-dev'
    Description: 'A name for the test WordPress stack'
    Type: 'String'
  OAuthToken:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'github-hc-functions-pipeline-oauth'
    Description: 'The name of OAuth token for webhook integration defined in parameters store'
  GithubSecret:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'github-hc-backend-pipeline-secret'
    Description: 'The secret used to ensure, that webhook comes from github'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'CodePipeline Settings'
        Parameters:
          - PipelineName
          - OAuthToken
          - GithubSecret
          - WebhookName
      - Label:
          default: 'Test Stack Settings'
        Parameters:
          - TestStackName

Resources:
  BuildStaging:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: 'CODEPIPELINE'
      Description: 'Build process to run the serverless deploy to staging environment'
      Environment:
        ComputeType: 'BUILD_GENERAL1_SMALL'
        EnvironmentVariables:
          - Name: 'Stage'
            Value: 'Test'
        Image: 'aws/codebuild/nodejs:10.14.1'
        Type: 'LINUX_CONTAINER'
      Name: 'BuildStaging'
      ServiceRole: !GetAtt [PipelineRole, Arn]
      Source:
        Type: 'CODEPIPELINE'

  BuildProduction:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: 'CODEPIPELINE'
      Description: 'Build process to run the serverless deploy to production environment'
      Environment:
        ComputeType: 'BUILD_GENERAL1_SMALL'
        EnvironmentVariables:
          - Name: 'Stage'
            Value: 'Production'
        Image: 'aws/codebuild/nodejs:10.14.1'
        Type: 'LINUX_CONTAINER'
      Name: 'BuildProduction'
      ServiceRole: !GetAtt [PipelineRole, Arn]
      Source:
        Type: 'CODEPIPELINE'

  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Ref PipelineName
      RoleArn: !GetAtt [PipelineRole, Arn]
      ArtifactStore:
        Location: 'squad-health-check-builds'
        Type: S3
      Stages:
        - Name: 'Source'
          Actions:
            - Name: 'fetch-github'
              ActionTypeId:
                Category: 'Source'
                Owner: 'ThirdParty'
                Provider: 'GitHub'
                Version: '1'
              Configuration:
                Branch: 'master'
                Owner: 'aceteam-tech'
                OAuthToken: !Ref OAuthToken
                PollForSourceChanges: 'false'
                Repo: 'TeamHealthCheck-backend'
              OutputArtifacts:
                - Name: 'TemplateSource'

        - Name: 'Test'
          Actions:
            - Name: 'deploy-test'
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Provider: 'CodeBuild'
                Version: '1'
              InputArtifacts:
                - Name: 'TemplateSource'
              Configuration:
                ProjectName: 'BuildStaging'

        - Name: 'Approve'
          Actions:
            - Name: 'approve'
              ActionTypeId:
                Category: 'Approval'
                Owner: 'AWS'
                Provider: 'Manual'
                Version: '1'

        - Name: 'Production'
          Actions:
            - Name: 'deploy-production'
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Provider: 'CodeBuild'
                Version: '1'
              InputArtifacts:
                - Name: 'TemplateSource'
              Configuration:
                ProjectName: 'BuildProduction'

  Webhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Name: !Ref WebhookName
      Authentication: 'GITHUB_HMAC'
      AuthenticationConfiguration:
        SecretToken: !Ref GithubSecret
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: 'refs/heads/master'
      TargetPipeline: !Ref PipelineName
      TargetAction: fetch-github
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: 'true'

  PipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'HC-CodePipeline'
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: 'Allow'
          Principal:
            Service:
              - 'codepipeline.amazonaws.com'
              - 'codebuild.amazonaws.com'
        Version: '2012-10-17'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'

Outputs:
  WebhookUrl:
    Description: 'The url for the github webhook'
    Value: !GetAtt Webhook.Url
